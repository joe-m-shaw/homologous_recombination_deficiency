---
title: "INC9110 Investigation"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: html
---

## Code

Code to produce this Quarto was written using [Github copilot](https://github.com/features/copilot/) and is saved in my [Github repo](https://github.com/joeshaw824/homologous_recombination_deficiency/tree/qiasymphony_validation).

## Introduction

The SeqOne SomaHRD pipeline has been validated for homologous recombination deficiency (HRD) testing in ovarian cancer.

In December 2023, SomaHRD v1.2 was validated for clinical use.

It recently came to our attention that since the clinical service has gone live, the patch number of SomaHRD had changed without being communicated. 

The pipeline version in December 2023 was version 1.2.1, whereas in April 2024 the version in use is version 1.2.7.

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library("here")
library("patchwork")
library("rvest")

source(here::here("functions/hrd_functions.R"))

```

Initially 10 samples were re-analysed using SomaHRD v1.2.7 on 10/04/2024. It was noted that there were some differences in the confidence in genomic instability metric (previously called robustness) compared to the results obtained with SomaHRD v1.2.1.

The full validation cohort was then re-analysed using SomaHRD v1.2.7 on 12/04/2024 to check for any differences in the PDF reports produced.

I am using PDF reports as the data source because when the method was validated only PDFs were available for download from the SeqOne website, although csv files are now provided with new analyses.

```{r}
#| label: load-validation-data
#| include: FALSE

validation_reports_v1_2_1 <- list.files(here::here("data/seqone_reports_v1_2/"),
  full.names = TRUE
)

validation_data_v1_2_1 <- validation_reports_v1_2_1 |>
  map(\(validation_reports_v1_2_1) read_seqone_report(
    file = validation_reports_v1_2_1,
    version = "1.2"
  )) |>
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.1") |> 
  arrange(shallow_sample_id)

```

```{r}
#| label: load-rerun-pdf-files
#| include: FALSE
#| warning: FALSE

reanalysis_20240410_pdfs <- list.files(path = here::here("data/INC9110_files/20240410_reanalysis"),
                              full.names = TRUE, pattern = ".pdf")

reanalysis_20240410_data <- reanalysis_20240410_pdfs |> 
  map(\(reanalysis_20240410_pdfs) read_seqone_report(reanalysis_20240410_pdfs, version = "1.2")) |> 
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.7") |>
  arrange(shallow_sample_id)

```

```{r}
#| label: load-full-validation-reanalysis
#| include: FALSE
#| warning: FALSE

reanalysis_20240412_pdfs <- list.files(path = here::here("data/INC9110_files/20240412_reanalysis"),
                              full.names = TRUE, pattern = ".pdf")

reanalysis_20240412_data <- reanalysis_20240412_pdfs |> 
  map(\(reanalysis_20240412_pdfs) read_seqone_report(reanalysis_20240412_pdfs, version = "1.2")) |> 
  list_rbind() |> 
  mutate(somahrd_version = "v1.2.7") |>
  arrange(shallow_sample_id)

```

```{r}
#| label: check-v1-2-7-results-are-the-same
#| include: FALSE
#| warning: FALSE

x <- reanalysis_20240412_data |> 
  filter(shallow_sample_id %in% reanalysis_20240410_data$shallow_sample_id) 

all.equal(x, reanalysis_20240410_data)

```

## Comparison

When the results from the PDF reports generated by the two pipeline versions are compared, there are no changes in SeqOne HRD score or SeqOne HRD status, but there are differences in robustness.

```{r}
#| label: compare-results
#| include: TRUE

all.equal(reanalysis_20240412_data, validation_data_v1_2_1)

```

## Confidence in Genomic Instability (Robustness)

```{r}
#| label: compare-robustness
#| echo: FALSE

robustness_warning_threshold <- 0.93

robustness_fail_threshold <- 0.85

validation_pipeline_comparison <- reanalysis_20240412_data |> 
  left_join(validation_data_v1_2_1, by = "shallow_sample_id") |> 
  mutate(robustness_diff = robustness.x - robustness.y,
         robustness_diff_abs = abs(robustness.x - robustness.y),
         qc_v1_2_7 = case_when(
    
            robustness.x > robustness_warning_threshold ~ "PASS",
            
            robustness.x <= robustness_warning_threshold &
              robustness.x > robustness_fail_threshold ~ "WARNING",
            
            robustness.x <= robustness_fail_threshold ~ "FAIL"),
         
         qc_v1_2_1 = case_when(
    
            robustness.y > robustness_warning_threshold ~ "PASS",
            
            robustness.y <= robustness_warning_threshold &
              robustness.y > robustness_fail_threshold ~ "WARNING",
            
            robustness.y <= robustness_fail_threshold ~ "FAIL"),
         
         check_hrd_status = ifelse(seqone_hrd_status.x == seqone_hrd_status.y, 
                                   "HRD status same", "HRD status different"))

```

```{r}
#| label: check-hrd-status
#| echo: FALSE
#| include: FALSE

validation_pipeline_comparison |> 
  count(check_hrd_status)

```

Confidence in genomic instability (previously called robustness) varies between the two pipeline versions, but there does not seem to be a systematic bias in the differences.

For quality control, a sample fails if it has a robustness score equal to or lower than 0.85 and a warning is issued if the robustness score is below 0.93.

```{r}
#| label: correlation-plot
#| echo: FALSE

robustness_axis_breaks <- c(seq(0, 0.8, by = 0.1), robustness_fail_threshold,
                                                 robustness_warning_threshold, 1.0)

robustness_correlation_plot <- ggplot(validation_pipeline_comparison, 
                                      aes(x = robustness.x,
                                          y = robustness.y)) +
  geom_point(pch = 21) +
  theme_bw() +
  labs(x = "Robustness (SomaHRD v1.2.7)", y = "Robustness (SomaHRD v1.2.1)",
       title = "Robustness correlation for two pipeline versions",
       subtitle = "Dashed lines show fail and warning thresholds") +
  geom_hline(yintercept = 0.85, linetype = "dashed") +
  geom_vline(xintercept = 0.85, linetype = "dashed") +
  geom_hline(yintercept = 0.93, linetype = "dashed") +
  geom_vline(xintercept = 0.93, linetype = "dashed") +
  scale_y_continuous(limits = c(0,1), breaks = robustness_axis_breaks) +
  scale_x_continuous(limits = c(0,1), breaks = robustness_axis_breaks)

robustness_correlation_plot

```

### Changes in Robustness Category

This variation did not change the overall HRD status to or from "NON-CONCLUSIVE" in any sample. However there were 8 cases in which the robustness category changed between "WARNING" and "PASS". 

```{r}
#| label: robustness-category-changes
#| echo: FALSE

robustness_category_changes <- validation_pipeline_comparison |> 
  filter(qc_v1_2_7 != qc_v1_2_1) |> 
  arrange(qc_v1_2_7) |> 
  rename("Robustness (v1.2.7)" = robustness.x,
         "Robustness (v1.2.1)" = robustness.y,
         "QC (v1.2.7)" = qc_v1_2_7,
         "QC (v1.2.1)" = qc_v1_2_1,
         "SeqOne HRD Status (v1.2.7)" = seqone_hrd_status.x,
         "SeqOne HRD Status (v1.2.1)" = seqone_hrd_status.y) |> 
  select(shallow_sample_id, "Robustness (v1.2.7)", "Robustness (v1.2.1)", 
         "QC (v1.2.7)", "QC (v1.2.1)", 
         "SeqOne HRD Status (v1.2.7)", "SeqOne HRD Status (v1.2.1)")

knitr::kable(robustness_category_changes)

```

### Impact of Coverage

The change in robustness seems to be impacted by sample coverage. The three largest differences between the two pipelines are for samples with coverage below the quality threshold of 0.5X.

```{r}
#| label: robustness-differences
#| echo: FALSE

robustness_coverage_plot <- ggplot(validation_pipeline_comparison, aes(x = robustness_diff_abs, y = coverage.x)) +
  geom_point(pch = 21, size = 2) +
  theme_bw() +
  labs(x = "Absolute change in robustness score", y = "Coverage (X)") +
  ylim(0, 2.5)

robustness_coverage_plot

```

### Range of Robustness Difference

In samples with coverage above 0.5X, the difference in robustness varies from -0.05 to 0.07 between the two pipeline versions.

```{r}
#| label: robustness-difference-range
#| echo: FALSE

validation_pipeline_comparison |> 
  filter(coverage.x >= 0.5) |>
  ggplot(aes(x = robustness_diff, y = )) +
  geom_histogram(binwidth = 0.01) +
  theme_bw() +
  labs(x = "Change in robustness score", y = "Number of replicates",
       caption = "Samples with coverage >= 0.5X")
```