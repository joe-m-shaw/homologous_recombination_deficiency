---
title: "SeqOne HRD Service"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: setup
#| include: false

filepath <- "C:/Users/joseph.shaw2/Documents/homologous_recombination_deficiency/"

```

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library(here)

source(here::here("functions/hrd_functions.R"))

```

```{r}
#| label: load-data
#| include: false

validation_reports <- list.files(here::here("data/seqone_reports_v1_2/"),
                                 full.names = TRUE,
                                 pattern = "*.pdf")

validation_data <- validation_reports |>
  map(\(validation_reports) read_seqone_report(
    file = validation_reports,
    version = "1.2"
  )) |>
  list_rbind()

find_hrd_files <- function(worksheet) {
  
  data_path <- "S:/central shared/Genetics/Repository/WorksheetAnalysedData/"
  
  folder_path <- str_c(data_path, worksheet, "/")
  
  output <- list.files(folder_path,
                       full.names = TRUE,
                       pattern = "*.pdf")
  
}

# Worksheet WS136827 was worksheet of Qiasymphony validation samples that was run after the validation ended and before the live service started.
ws136827_reports <- list.files(str_c(filepath, "data/seq_one_reports_WS136827/"),
                             full.names = TRUE,
                             pattern = "*.pdf")

ws136827_data <- ws136827_reports |>
  map(\(ws136827_reports) read_seqone_report(
    file = ws136827_reports,
    version = "1.2"
  )) |>
  list_rbind()

# Add new worksheets to this list to update the Quarto.
live_ws <- list("WS137333", "WS137837", "WS138061")

live_ws_filepaths <- live_ws |> 
  map(\(live_ws) find_hrd_files(live_ws)) |> 
  flatten()

live_data <- live_ws_filepaths |>
  map(\(live_ws_filepaths) read_seqone_report(
    file = live_ws_filepaths,
    version = "1.2"
  )) |>
  list_rbind()

all_hrd_data <- rbind(validation_data, ws136827_data, live_data)

```

## All Samples (validation and live service)

```{r}
#| label: sample-numbers
#| echo: false

summary_table <- all_hrd_data |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(summary_table) 

```

Total samples tested: **`r length(unique(all_hrd_data$shallow_sample_id))`**

## Live Service Samples

```{r}
#| label: live-service-numbers
#| echo: false

live_summary_table <- live_data |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(live_summary_table) 

```

Total samples tested: **`r length(unique(live_data$shallow_sample_id))`**

{{< pagebreak >}}

## HRD Probability Distribution

```{r}
#| label: hrd-score-distribution
#| echo: FALSE

safe_blue <- "#88CCEE"
safe_red <- "#CC6677"
safe_grey <- "#888888"

seqone_histo_plot <- all_hrd_data |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  ggplot(aes(x = seqone_hrd_score, y = )) +
  geom_histogram(binwidth = 0.01, aes(fill = seqone_hrd_status)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  scale_x_continuous(
    breaks = c(0, 0.25, 0.5, 0.75, 1)
  ) +
  geom_vline(xintercept = 0.5, linetype = "dashed") +
  theme(
    panel.grid = element_blank(),
    legend.position = "bottom"
  ) +
  labs(
    y = "Number of samples",
    x = "SeqOne HRD Probability",
    fill = "SeqOne HRD Status",
    caption = "Data for validation and live service shown. Non-conclusive results excluded")

seqone_histo_plot

```

{{< pagebreak >}}

## Quality Metrics

```{r}
#| label: qc-metrics
#| echo: FALSE

draw_qc_dotplot <- function(yvar) {
  
  ggplot(all_hrd_data, aes(x = worksheet, y = {{ yvar }})) +
    geom_jitter(colour="black",pch=21,
                aes(fill = seqone_hrd_status), size = 3,
                alpha = 0.6) +
    scale_fill_manual(values = c(safe_blue, safe_red,
                                   safe_grey)) +
    theme_bw() +
    theme(panel.grid = element_blank(),
          legend.position = "bottom",
          axis.text.x = element_text(angle = 45, vjust = 0.2)) +
    labs(x = "")

}

draw_qc_boxplot <- function(yvar, ymin, ymax) {
  
  ggplot(all_hrd_data, aes(x = worksheet, y = {{ yvar }})) +
    geom_boxplot() +
    theme_bw() +
    theme(panel.grid = element_blank(),
          axis.text.x = element_text(angle = 45, vjust = 0.2)) +
    labs(x = "") +
    ylim(ymin, ymax)

}

cov_boxplot <- draw_qc_boxplot(yvar = coverage, ymin = 0, 
                               ymax = max(all_hrd_data$coverage) + 0.5) +
  geom_hline(yintercept = 0.5, linetype = "dashed")

rob_boxplot <- draw_qc_boxplot(yvar = robustness, 
                               ymin = min(all_hrd_data$robustness) - 0.05,
                               ymax = 1) +
  geom_hline(yintercept = 0.85, linetype = "dashed")

map_boxplot <- draw_qc_boxplot(yvar = percent_mapping,
                               ymin = min(all_hrd_data$percent_mapping) - 5,
                               ymax = 100)

cov_boxplot

rob_boxplot

map_boxplot

```

```{r}
#| label: qiasymphony-results
#| include: FALSE

qiasymphony_hrd_results <- all_hrd_data |> 
  filter(worksheet == "WS136827" | dlms_dna_number %in% c(23047082,
                                                          23053359)) |> 
  filter(dlms_dna_number != 21003549)

write.csv(qiasymphony_hrd_results, here::here("outputs/qiasymphony_hrd_results.csv"),
          row.names = FALSE)

```


