---
title: "SeqOne HRD Service Audit"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library("here")
library("patchwork")
library("knitr")

source(here::here("functions/hrd_functions.R"))

```

Data for this audit is collated using the collate_seqone_audit_data.R script.

```{r}
#| label: load-collated-data
#| include: false

read_collated_pdf_data <- function(file) {
  
  output <- read_csv(file = here::here(str_c("data/seqone_collated_audit_data/",
                                             {{ file }}, ".csv")),
                     col_types = list(
                       shallow_sample_id = col_character(),
                       worksheet = col_character(),
                       sample_id = col_character(),
                       dlms_dna_number = col_character(),
                       seqone_hrd_score = col_double(),
                       seqone_hrd_status = col_factor(
                         levels = c("NEGATIVE", "POSITIVE", "NON-CONCLUSIVE")),
                       lga = col_double(),
                       lpc = col_double(),
                       ccne1 = col_double(),
                       rad51b = col_double(),
                       seqone_ncc = col_double(),
                       coverage = col_double(),
                       percent_mapping = col_double(),
                       robustness = col_double(),
                       low_tumour_fraction = col_character(),
                       date = col_date(),
                       user = col_character(),
                       user = col_character(),
                       filename = col_character(),
                       version = col_character()))
  
  return(output)
  
}

collated_validation_pdf_data <- read_collated_pdf_data("collated_validation_pdf_data")

collated_live_pdf_data <- read_collated_pdf_data("collated_live_pdf_data")

ws136827_pdf_data <- read_collated_pdf_data("ws136827_pdf_data")

ws140359_pdf_data <- read_collated_pdf_data("ws140359_pdf_data")

collated_live_csv_data <- read_csv(file = here::here("data/seqone_collated_audit_data/collated_live_csv_data.csv"))

```

```{r}
#| label: collate-data
#| include: false

all_hrd_data_pdf <- rbind(collated_validation_pdf_data, 
                          ws136827_pdf_data, 
                          collated_live_pdf_data,
                          ws140359_pdf_data)

```

```{r}
#| label: dlms-connection
#| include: FALSE

dbi_con <- DBI::dbConnect(
  drv = odbc::odbc(),
  dsn = "moldb")

sample_tbl <- tbl(dbi_con, dbplyr::in_catalog(catalog = "MolecularDB",
                                              schema = "dbo",
                                              table = "Samples")) |> 
  janitor::clean_names()


```

```{r}
#| label: get-referring-centres
#| include: FALSE

live_samples <- collated_live_pdf_data$sample_id

seqone_referring_centres <- sample_tbl |> 
  filter(labno %in% live_samples) |> 
  select(labno, consultant_address, comments) |> 
  collect()

consultant_address_regex <- regex(
  r"[
  ^(.+)
  _.+
  ]",
  comments = TRUE
)
  
seqone_referring_centres_clean <- seqone_referring_centres |> 
  mutate(consultant_address_mod = str_replace(string = consultant_address,
                                            pattern = "\r\n",
                                            replacement = "_"),
    referring_centre = str_extract(string = consultant_address_mod,
                                        pattern = consultant_address_regex,
                                        group = 1),
    
    # Clean up
    referring_centre = case_when(
      
      referring_centre == "Royal Oldham Hospital - Pathology Department" ~"Royal Oldham Hospital",
      
      referring_centre == "Manchester Royal Infirmary Laboratory" ~"Manchester Royal Infirmary",
      
      is.na(referring_centre) ~"Unknown",
      
      TRUE ~referring_centre))

seqone_referring_centres_summary <- seqone_referring_centres_clean |> 
  count(referring_centre) |> 
  arrange(desc(n))

```

```{r}
#| label: get-brca-status
#| echo: FALSE

results_tbl <- tbl(dbi_con, 
                   dbplyr::in_catalog(
                     catalog = "MolecularDB",
                     schema = "dbo",
                     table = "ResultsAccess")) |> 
  janitor::clean_names()

all_results <- results_tbl |> 
  filter(labno %in% live_samples) |> 
  select(labno, test, genotype, genotype2,
         genocomm) |> 
  collect()

pansolid_strings <- unique(grep(pattern = "PANSOLID", x = all_results$test,
                         ignore.case = TRUE, value = TRUE))

pansolid_results <- all_results |> 
  filter(test %in% pansolid_strings)

brca_strings <- unique(grep(pattern = "c.\\d{2,5}", x = pansolid_results$genotype, 
            ignore.case = TRUE, value = TRUE))

pansolid_results_mod <- pansolid_results |> 
  mutate(brca_status = case_when(
    
    genotype %in% brca_strings ~"BRCA variant detected",
    
    genotype == "Analysis failed" ~"Fail",
    
    genotype == "No pathogenic variant identified" ~"No BRCA variants detected",
    
    TRUE ~"other"),
    brca_status = factor(brca_status, levels = c("No BRCA variants detected",
                                                 "BRCA variant detected",
                                                 "Fail",
                                                 "other")))

seqone_pansolid_join <- collated_live_pdf_data |> 
  left_join(pansolid_results_mod, join_by("sample_id" == "labno"))

```

# All Samples (validation and live service)

```{r}
#| label: sample-numbers
#| echo: false

summary_table <- all_hrd_data_pdf |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(summary_table) 

```

Total samples tested: **`r length(unique(all_hrd_data_pdf$sample_id))`**

Total replicates tested: **`r length(unique(all_hrd_data_pdf$shallow_sample_id))`**

# Live Service Samples

The live service began in December 2023. These values are taken from the PDF reports exported from the SeqOne website.

```{r}
#| label: live-service-numbers
#| echo: false

live_summary_table <- collated_live_pdf_data |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(live_summary_table) 

```

Total samples tested: **`r length(unique(collated_live_pdf_data$sample_id))`**

Total worksheets: **`r length(unique(collated_live_pdf_data$worksheet))`**

# Plots

```{r}
#| label: hrd-score-distribution
#| echo: FALSE

safe_blue <- "#88CCEE"
safe_red <- "#CC6677"
safe_grey <- "#888888"

data_for_histogram_plot <- all_hrd_data_pdf |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  filter(!duplicated(sample_id))

seqone_histo_plot <- ggplot(data_for_histogram_plot, aes(x = seqone_hrd_score, y = )) +
                            geom_histogram(binwidth = 0.01, 
                                           aes(fill = seqone_hrd_status)) +
                            scale_fill_manual(values = c(safe_blue, safe_red)) +
                            theme_bw() +
                            scale_x_continuous(
                              breaks = c(0, 0.25, 0.5, 0.75, 1)) +
                            geom_vline(xintercept = 0.5, linetype = "dashed") +
                            theme(
                              panel.grid = element_blank(),
                              legend.position = "bottom") +
                            labs(
                              y = "Number of samples",
                              x = "SeqOne HRD Score",
                              title = "SeqOne HRD Score Distribution",
                              fill = "SeqOne HRD Status",
                              caption = "Data for validation and live service shown. Non-conclusive results excluded")

seqone_histo_plot

```

```{r}
#| label: hrd-score-brca-status
#| echo: FALSE

hrd_score_brca_plot <- seqone_pansolid_join |> 
  filter(brca_status %in% c("BRCA variant detected", "No BRCA variants detected") &
           seqone_hrd_status != "NON-CONCLUSIVE") |>
  ggplot(aes(x = seqone_hrd_score, y = )) +
        geom_histogram(binwidth = 0.01, 
                       aes(fill = seqone_hrd_status)) +
        scale_fill_manual(values = c(safe_blue, safe_red)) +
        theme_bw() +
        scale_x_continuous(
          breaks = c(0, 0.25, 0.5, 0.75, 1)) +
        geom_vline(xintercept = 0.5, linetype = "dashed") +
  theme(legend.position = "bottom") +
  facet_wrap(~brca_status, nrow = 2) +
  labs(title = "SeqOne HRD Score and BRCA Status",
       caption = "Data for live service shown. Non-conclusive results excluded. DLMS samples only.", 
       y = "Number of samples",
       x = "SeqOne HRD Score")

hrd_score_brca_plot

```

```{r}
#| label: lga-lpc-distribution
#| echo: FALSE

lga_lpc_plot <- all_hrd_data_pdf |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  filter(!duplicated(sample_id)) |> 
  group_by(lga, lpc, seqone_hrd_status) |> 
  count() |>
    ggplot(aes(x = lga, y = lpc)) +
                            geom_point(pch = 21, alpha = 0.5,
                                       aes(size = n,
                                           fill = seqone_hrd_status)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  theme(legend.position = "bottom", legend.box="vertical", legend.margin=margin()) +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  labs(x = "Large Genomic Alterations", y = "Loss of Parental Copy",
       title = "LGA and LPC Results",
       caption = "Data for validation and live service shown. Non-conclusive results excluded")
  
lga_lpc_plot

```

```{r}
#| label: failing-at-0.9
#| eval: FALSE
#| include: FALSE

seqone_robustness_threshold <- 0.85

new_robustness_threshold <- 0.90

live_data_pdf_with_checks <- live_data_pdf |> 
  mutate(new_qc_check = case_when(
    
    robustness <= seqone_robustness_threshold ~"Inconclusive on SeqOne threshold",
    
    robustness >= new_robustness_threshold ~"Pass new threshold",
    
    robustness > seqone_robustness_threshold &
      robustness < new_robustness_threshold ~"Between thresholds"),
    
    telomere_check = case_when(
    
    lga >= 10 & lga <= 17 ~"telomere check required",
    
    lga < 10 | lga > 17 ~"telomere check NOT required"),
    
    visual_check = case_when(
      
      new_qc_check == "Between thresholds" |
        telomere_check == "telomere check required" ~"visual check required",
      TRUE ~"visual check NOT required")) 

new_qc_table <- live_data_pdf_with_checks |> 
  group_by(new_qc_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(new_qc_table)

```

```{r}
#| label: telomere-checks
#| eval: FALSE
#| include: FALSE

telomere_check_table <- live_data_pdf_with_checks |> 
  group_by(telomere_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(telomere_check_table)

```

```{r}
#| label: both-checks-combined
#| eval: FALSE
#| include: FALSE

both_check_table <- live_data_pdf_with_checks |> 
  group_by(visual_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(both_check_table)

```

```{r}
#| label: hrd-scores-across-worksheets
#| include: FALSE
#| eval: FALSE

seqone_histo_plot +
  facet_wrap(~worksheet)

```

{{< pagebreak >}}

# EQA Results

```{r}
#| label: eqa-results
#| echo: FALSE

eqa_samples <- c("24008971", "24008972", "24008973", "24008974", "24008975", 
                 "24008976", "24008978", "24008980", "24008981", "24008982")

eqa_results <- all_hrd_data_pdf |> 
  filter(sample_id %in% eqa_samples) |> 
  select(sample_id, lga, lpc, seqone_hrd_status, seqone_hrd_score) |> 
  arrange(seqone_hrd_status)

knitr::kable(eqa_results)

eqa_result_lga_lpc <- ggplot(all_hrd_data_pdf |> 
  filter(sample_id %in% eqa_samples), aes(x = lga, y = lpc)) +
  geom_point(size = 2, aes(colour = seqone_hrd_status)) +
  scale_colour_manual(values = c(safe_blue, safe_red)) +
  geom_point(data = all_hrd_data_pdf |> 
               filter(sample_id == "24008982"), 
             shape = 21, colour = safe_red, fill = NA, size = 5, stroke = 1) +
  theme_bw() +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  ylim(0, 36) +
  xlim(0, 36) +
  labs(title = "EQA Ring Trial Results",
       subtitle = "Red circled result (24008982) was discrepant with other labs")

eqa_result_lga_lpc

```

{{< pagebreak >}}

# SeraCare Controls

```{r}
#| label: check-seracare-controls
#| echo: FALSE

all_samples <- all_hrd_data_pdf$dlms_dna_number

seracare_info <- sample_tbl |> 
  filter(labno %in% all_samples) |> 
  select(labno, firstname, surname, pathno) |> 
  collect()

all_hrd_data_pdf_with_sample_info <- all_hrd_data_pdf |> 
  left_join(seracare_info, join_by(dlms_dna_number == labno)) |> 
  mutate(month = floor_date(x = date, unit = "month"))

seraseq_results <- all_hrd_data_pdf_with_sample_info |> 
  filter(surname == "Seraseq") |> 
  mutate(control_type = factor(x = firstname, levels = c("High-Positive FFPE HRD",
                                                         "Low-Positive FFPE HRD",
                                                         "FFPE HRD Negative")))

deep_red <- "#660000"
lighter_red <- "#FF6666"

seracare_score_plot <- ggplot(seraseq_results, aes(x = date, y = seqone_hrd_score)) +
  geom_jitter(aes(colour = control_type), size = 3,
              alpha = 0.7) +
  scale_colour_manual(values = c(deep_red, lighter_red, safe_blue)) +
  labs(x = "", title = "SeraCare control SeqOne HRD Scores",
       y = "SeqOne HRD Score") +
  theme_bw() +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  scale_x_date(limits = c(as.Date("2023-11-01"), as.Date("2024-08-01")),
               date_breaks = "month",
               date_labels = "%b %Y") +
  theme(axis.text.x = element_text(angle = 90)) +
  ylim(0, 1)

seracare_score_plot

seracare_lpc_lga_plot <- ggplot(seraseq_results, aes(x = lga, y = lpc)) +
  geom_point(aes(colour = control_type), size = 3,
              alpha = 0.5) +
  scale_colour_manual(values = c(deep_red, lighter_red, safe_blue)) +
  theme_bw() +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  ylim(0, 36) +
  xlim(0, 36) +
  labs(title = "SeraCare control LPC and LGA results")

seracare_lpc_lga_plot

seracare_lpc_lga_date_plot <- ggplot(seraseq_results, aes(x = lga, y = lpc)) +
  geom_point(aes(shape = control_type,
                 colour = month), size = 3,
              alpha = 0.5) +
  #scale_colour_manual(values = c(deep_red, lighter_red, safe_blue)) +
  theme_bw() +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  ylim(0, 36) +
  xlim(0, 36) +
  labs(title = "SeraCare control LPC and LGA results")

seracare_lpc_lga_date_plot

```

{{< pagebreak >}}

# Referring Centres

```{r}
#| label: referring-centres-table
#| echo: FALSE

knitr::kable(seqone_referring_centres_summary)

```

# Quality Metrics

```{r}
#| label: qc-metrics
#| echo: FALSE
#| warning: FALSE
#| message: FALSE

cov_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = coverage, ymin = 0, 
                               ymax = max(all_hrd_data_pdf$coverage) + 0.5) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  labs(y = "Coverage (X)")

rob_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = robustness, 
                               ymin = min(all_hrd_data_pdf$robustness) - 0.05,
                               ymax = 1.1) +
  geom_hline(yintercept = 0.85, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
  labs(y = "Confidence in genomic instability")

map_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = percent_mapping,
                               ymin = 0,
                               ymax = 100) +
  geom_hline(yintercept = 50, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 100, by = 10),
                     limits = c(0,100)) +
  labs(y = "Percentage correct mapping")

low_tumor_fraction_dot_plot <- draw_qc_dotplot(df = collated_live_csv_data, 
                                               yvar = low_tumor_fraction,
                ymin = 0, ymax = 5,
                fill_var = status) +
  labs(y = "Low tumor fraction (%)")

cov_dotplot

rob_dotplot

map_dotplot

low_tumor_fraction_dot_plot

```

```{r}
#| label: qiasymphony-results
#| eval: FALSE
#| include: FALSE

qiasymphony_hrd_results <- all_hrd_data |> 
  filter(worksheet == "WS136827" | dlms_dna_number %in% c(23047082,
                                                          23053359)) |> 
  filter(dlms_dna_number != 21003549)

write.csv(qiasymphony_hrd_results, here::here("outputs/qiasymphony_hrd_results.csv"),
          row.names = FALSE)

```

```{r}
#| label: low-tumour-fraction
#| eval: FALSE
#| include: FALSE

data_with_low_tumour_score <- live_data_pdf |> 
  left_join(live_data_csv |> 
              select(sample, low_tumor_fraction) |> 
              rename(low_tumour_score = low_tumor_fraction),
            join_by("shallow_sample_id" == "sample"))

low_tumour_plot <- ggplot(data_with_low_tumour_score, aes(x = reorder(shallow_sample_id, 
                                                   low_tumour_score),
                                       y = low_tumour_score)) +
  geom_point(pch = 21, size = 3, alpha = 0.8, aes(fill = low_tumour_fraction)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
  labs(x = "Sample", y = "Low tumour score from csv file")

low_tumour_plot

```

```{r}
#| label: positive-negative-trends
#| echo: FALSE

all_hrd_data_pdf |> 
  filter(date > "2023-12-13 00:00:00") |> 
  group_by(worksheet) |> 
  count(seqone_hrd_status) |> 
  ggplot(aes(x = worksheet, y = n, fill = seqone_hrd_status)) +
  geom_col(colour = "black") +
  scale_fill_manual(values = c(safe_blue, safe_red, safe_grey)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = "", y = "Number of results")


```

```{r}
#| label: low-tumour-fraction-qc
#| eval: FALSE
#| include: FALSE

p1 <- draw_low_tumor_plot(coverage)

p2 <- draw_low_tumor_plot(gi_confidence)

p3 <- draw_low_tumor_plot(pct_mapped_reads)

p4 <- ggplot(live_data_csv, aes(x = status, y = low_tumor_fraction)) +
  geom_jitter(pch = 21, size = 2, aes(fill = status)) +
  scale_fill_manual(values = c(safe_blue, safe_grey, safe_red)) +
  theme_bw() +
  ylim(0, 5)

low_tumor_comb_plot <- p1 + p2 + p3 + p4 + guide_area() +
  plot_layout(ncol = 2, guides = "collect",
              heights = c(5, 5, 3))

low_tumor_comb_plot

```
