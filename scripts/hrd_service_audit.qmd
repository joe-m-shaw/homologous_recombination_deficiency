---
title: "SeqOne HRD Service"
author: "Joe Shaw"
date: today
date-format: "DD/MM/YYYY"
format: pdf
editor: visual
---

```{r}
#| label: packages-and-functions
#| include: false

library("tidyverse")
library("ggpubr")
library("readxl")
library("here")
library("patchwork")

source(here::here("functions/hrd_functions.R"))

```

```{r}
#| label: load-validation-pdf-data
#| include: false

validation_reports <- list.files(here::here("data/seqone_reports_v1_2/"),
                                 full.names = TRUE,
                                 pattern = "*.pdf")

validation_data <- validation_reports |>
  map(\(validation_reports) read_seqone_report(
    file = validation_reports,
    version = "1.2"
  )) |>
  list_rbind()

# Worksheet WS136827 was worksheet of Qiasymphony validation samples that was run after the validation ended and before the live service started.
ws136827_reports <- list.files(here::here("data/seq_one_reports_WS136827/"),
                             full.names = TRUE,
                             pattern = "*.pdf")

ws136827_data <- ws136827_reports |>
  map(\(ws136827_reports) read_seqone_report(
    file = ws136827_reports,
    version = "1.2"
  )) |>
  list_rbind()

```

```{r}
#| label: load-INC9096-data
#| include: false

# This is the data for the samples that had abnormally low confidence in genomic instability
# scores due to a pipeline error (see incident INC9096).
ws140359_pdfs <- list.files(here::here("data/WS140359 data/"),
                            full.names = TRUE,
                            pattern = ".pdf")

ws140359_pdf_data <- ws140359_pdfs |> 
  map(\(ws140359_pdfs) read_seqone_report(file = ws140359_pdfs,
                                          version = "1.2")) |> 
        list_rbind() |> 
  mutate(worksheet = "WS140359_1") |> 
  filter(date == "2024-04-01")

```

```{r}
#| label: load-live-service-pdf-data
#| include: false

# New worksheets can be added to this Excel
live_ws_excel <- read_excel(path = here::here("data/live_service_worksheets.xlsx"))

live_ws <- list(live_ws_excel$worksheet)

live_ws_filepaths_pdf <- live_ws |> 
  map(\(live_ws) find_hrd_files(live_ws, filetype = ".pdf")) |> 
  flatten()

live_data_pdf <- live_ws_filepaths_pdf |>
  map(\(live_ws_filepaths_pdf) read_seqone_report(
    file = live_ws_filepaths_pdf,
    version = "1.2"
  )) |>
  list_rbind() |> 
  mutate(worksheet = ifelse(worksheet == "WS140359", "WS140359_2", worksheet))


```

```{r}
#| label: collate-data
#| include: false

all_hrd_data_pdf <- rbind(validation_data, 
                          ws136827_data, 
                          live_data_pdf,
                          ws140359_pdf_data)

```

```{r}
#| label: load-csv-data
#| include: FALSE
#| warning: FALSE

live_ws_filepaths_csv <- live_ws |> 
  map(\(live_ws) find_hrd_files(live_ws, filetype = ".csv")) |> 
  flatten()

live_data_csv <- live_ws_filepaths_csv |> 
  map(\(live_ws_filepaths_csv) read_seqone_csv(file = live_ws_filepaths_csv)) |> 
  list_rbind() |> 
  mutate(worksheet = str_extract(string = sample,
                                 pattern = "(WS[0-9]{6})_\\d{8}",
                                 group = 1))
```

## All Samples (validation and live service)

```{r}
#| label: sample-numbers
#| echo: false

summary_table <- all_hrd_data_pdf |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(summary_table) 

```

Total samples tested: **`r length(unique(all_hrd_data_pdf$shallow_sample_id))`**

Total replicates tested: **`r length(unique(all_hrd_data_pdf$sample_id))`**

## Live Service Samples

```{r}
#| label: live-service-numbers
#| echo: false

live_summary_table <- live_data_pdf |> 
  group_by(seqone_hrd_status) |> 
  summarise(total = n()) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1))

knitr::kable(live_summary_table) 

```

Total samples tested: **`r length(unique(live_data_pdf$sample_id))`**

Total worksheets: **`r length(live_ws[[1]])`**

{{< pagebreak >}}

## HRD Probability Distribution

```{r}
#| label: hrd-score-distribution
#| echo: FALSE

safe_blue <- "#88CCEE"
safe_red <- "#CC6677"
safe_grey <- "#888888"

data_for_histogram_plot <- all_hrd_data_pdf |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  filter(!duplicated(sample_id))

seqone_histo_plot <- ggplot(data_for_histogram_plot, aes(x = seqone_hrd_score, y = )) +
                            geom_histogram(binwidth = 0.01, 
                                           aes(fill = seqone_hrd_status)) +
                            scale_fill_manual(values = c(safe_blue, safe_red)) +
                            theme_bw() +
                            scale_x_continuous(
                              breaks = c(0, 0.25, 0.5, 0.75, 1)) +
                            geom_vline(xintercept = 0.5, linetype = "dashed") +
                            theme(
                              panel.grid = element_blank(),
                              legend.position = "bottom") +
                            labs(
                              y = "Number of samples",
                              x = "SeqOne HRD Probability",
                              fill = "SeqOne HRD Status",
                              caption = "Data for validation and live service shown. Non-conclusive results excluded")

seqone_histo_plot

```

```{r}
#| label: lga-lpc-distribution
#| echo: FALSE

lga_lpc_plot <- all_hrd_data_pdf |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  filter(!duplicated(sample_id)) |> 
  group_by(lga, lpc, seqone_hrd_status) |> 
  count() |>
    ggplot(aes(x = lga, y = lpc)) +
                            geom_point(pch = 21, alpha = 0.5,
                                       aes(size = n,
                                           fill = seqone_hrd_status)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  theme(legend.position = "bottom", legend.box="vertical", legend.margin=margin()) +
  geom_segment(
    data = line_df,
    mapping = aes(x = x, y = y, xend = xend, yend = yend),
    linetype = "dashed") +
  labs(x = "Large Genomic Alterations", y = "Loss of Parental Copy",
       caption = "Data for validation and live service shown. Non-conclusive results excluded")
  
lga_lpc_plot

```

## Failing at Robustness of 0.9

```{r}
#| label: failing-at-0.9
#| echo: FALSE

seqone_robustness_threshold <- 0.85

new_robustness_threshold <- 0.90

live_data_pdf_with_checks <- live_data_pdf |> 
  mutate(new_qc_check = case_when(
    
    robustness <= seqone_robustness_threshold ~"Inconclusive on SeqOne threshold",
    
    robustness >= new_robustness_threshold ~"Pass new threshold",
    
    robustness > seqone_robustness_threshold &
      robustness < new_robustness_threshold ~"Between thresholds"),
    
    telomere_check = case_when(
    
    lga >= 10 & lga <= 17 ~"telomere check required",
    
    lga < 10 | lga > 17 ~"telomere check NOT required"),
    
    visual_check = case_when(
      
      new_qc_check == "Between thresholds" |
        telomere_check == "telomere check required" ~"visual check required",
      TRUE ~"visual check NOT required")) 

new_qc_table <- live_data_pdf_with_checks |> 
  group_by(new_qc_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(new_qc_table)

```

## Telomere Checks

```{r}
#| label: telomere-checks
#| echo: FALSE

telomere_check_table <- live_data_pdf_with_checks |> 
  group_by(telomere_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(telomere_check_table)

```

## Both checks combined

```{r}
#| label: both-checks-combined
#| echo: FALSE

both_check_table <- live_data_pdf_with_checks |> 
  group_by(visual_check) |> 
  summarise(total = n()) |> 
  mutate(percent = round((total / sum(total)) * 100, 1)) |> 
  arrange(desc(total))

knitr::kable(both_check_table)

```

```{r}
#| label: hrd-scores-across-worksheets
#| include: FALSE
#| eval: FALSE

seqone_histo_plot +
  facet_wrap(~worksheet)

```

{{< pagebreak >}}

## Quality Metrics

```{r}
#| label: qc-metrics
#| echo: FALSE
#| warning: FALSE
#| message: FALSE

cov_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = coverage, ymin = 0, 
                               ymax = max(all_hrd_data_pdf$coverage) + 0.5) +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  labs(y = "Coverage (X)")

rob_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = robustness, 
                               ymin = min(all_hrd_data_pdf$robustness) - 0.05,
                               ymax = 1.1) +
  geom_hline(yintercept = 0.85, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
  labs(y = "Confidence in genomic instability")

map_dotplot <- draw_qc_dotplot(df = all_hrd_data_pdf,
                               yvar = percent_mapping,
                               ymin = 0,
                               ymax = 100) +
  geom_hline(yintercept = 50, linetype = "dashed") +
  scale_y_continuous(breaks = seq(0, 100, by = 10),
                     limits = c(0,100)) +
  labs(y = "Percentage correct mapping")

low_tumor_fraction_dot_plot <- draw_qc_dotplot(df = live_data_csv, 
                                               yvar = low_tumor_fraction,
                ymin = 0, ymax = 5,
                fill_var = status) +
  labs(y = "Low tumor fraction (%)")

cov_dotplot

rob_dotplot

map_dotplot

low_tumor_fraction_dot_plot

```

{{< pagebreak >}}

## External Quality Assurance Results

```{r}
#| label: eqa-results
#| echo: FALSE

eqa_samples <- c("24008971", "24008972", "24008973", "24008974", "24008975", 
                 "24008976", "24008978", "24008980", "24008981", "24008982")

eqa_results <- live_data_pdf |> 
  filter(sample_id %in% eqa_samples) |> 
  select(sample_id, seqone_hrd_status, seqone_hrd_score) |> 
  arrange(seqone_hrd_status)

knitr::kable(eqa_results)

```

```{r}
#| label: qiasymphony-results
#| eval: FALSE
#| include: FALSE

qiasymphony_hrd_results <- all_hrd_data |> 
  filter(worksheet == "WS136827" | dlms_dna_number %in% c(23047082,
                                                          23053359)) |> 
  filter(dlms_dna_number != 21003549)

write.csv(qiasymphony_hrd_results, here::here("outputs/qiasymphony_hrd_results.csv"),
          row.names = FALSE)

```

## Low Tumour Fraction Score

The low tumour fraction score is provided within the csv file but not in the PDF report.

```{r}
#| label: low-tumour-fraction
#| echo: FALSE

data_with_low_tumour_score <- live_data_pdf |> 
  left_join(live_data_csv |> 
              select(sample, low_tumor_fraction) |> 
              rename(low_tumour_score = low_tumor_fraction),
            join_by("shallow_sample_id" == "sample"))

low_tumour_plot <- ggplot(data_with_low_tumour_score, aes(x = reorder(shallow_sample_id, 
                                                   low_tumour_score),
                                       y = low_tumour_score)) +
  geom_point(pch = 21, size = 3, alpha = 0.8, aes(fill = low_tumour_fraction)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  theme_bw() +
  theme(axis.text.x = element_blank()) +
  labs(x = "Sample", y = "Low tumour score from csv file")

low_tumour_plot

```

```{r}
#| label: low-tumour-fraction-qc
#| eval: FALSE
#| include: FALSE

p1 <- draw_low_tumor_plot(coverage)

p2 <- draw_low_tumor_plot(gi_confidence)

p3 <- draw_low_tumor_plot(pct_mapped_reads)

p4 <- ggplot(live_data_csv, aes(x = status, y = low_tumor_fraction)) +
  geom_jitter(pch = 21, size = 2, aes(fill = status)) +
  scale_fill_manual(values = c(safe_blue, safe_grey, safe_red)) +
  theme_bw() +
  ylim(0, 5)

low_tumor_comb_plot <- p1 + p2 + p3 + p4 + guide_area() +
  plot_layout(ncol = 2, guides = "collect",
              heights = c(5, 5, 3))

low_tumor_comb_plot

```

{{< pagebreak >}}

## Adding Confidence Intervals

SomaHRDv1.3 includes confidence intervals for the confidence in genomic instability metric. If the confidence intervals span 0.5 then the sample is classified as inconclusive.

```{r}
#| label: add-confidence-intervals
#| include: FALSE

error_bar_qc_check_threshold <- 0.5

all_data_mod <- all_hrd_data_pdf |> 
  # Remove data from INC9096
  filter(worksheet != "WS140359_1") |> 
  mutate(
    std_dev = 1 - robustness,
    hrd_score_minus_sd = seqone_hrd_score - std_dev,
    hrd_score_plus_sd = seqone_hrd_score + std_dev,
    hrd_score_min = case_when(
      
      hrd_score_minus_sd < 0 ~0,
      
      hrd_score_minus_sd > 1 ~1,
      
      TRUE ~hrd_score_minus_sd),
    
    hrd_score_max = case_when(
      
      hrd_score_plus_sd < 0 ~0,
      
      hrd_score_plus_sd > 1 ~1,
      
      TRUE ~hrd_score_plus_sd),
    
    error_bar_width = hrd_score_max - hrd_score_min,
    
    error_bar_qc_check = case_when(
      
      hrd_score_max > error_bar_qc_check_threshold &
        
        hrd_score_min > error_bar_qc_check_threshold ~"pass",
      
      hrd_score_max < error_bar_qc_check_threshold &
        
        hrd_score_min < error_bar_qc_check_threshold ~"pass",
      
      hrd_score_max > error_bar_qc_check_threshold &
        
        hrd_score_min < error_bar_qc_check_threshold ~"fail"))

```


```{r}
#| label: plot-confidence-intervals
#| echo: FALSE

all_data_mod |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE") |> 
  count(error_bar_qc_check)

all_data_mod |> 
  filter(seqone_hrd_status != "NON-CONCLUSIVE" &
           error_bar_qc_check == "fail") |> 
  ggplot(aes(x = reorder(sample_id, seqone_hrd_score),
                         y = seqone_hrd_score)) +
  geom_point(pch = 21, size = 3, aes(fill = seqone_hrd_status)) +
  scale_fill_manual(values = c(safe_blue, safe_red)) +
  geom_errorbar(aes(ymin = hrd_score_min, ymax = hrd_score_max)) +
  theme_bw() +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90)) +
  labs(title = "Samples with error bars which cross 0.5 threshold",
       subtitle = "Only samples with conclusive results included",
       y = "SeqOne HRD Score", x = "") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +
  ylim(0, 1)

```

{{< pagebreak >}}

The width of the confidence intervals does not seem to correlate with coverage.

```{r}
#| label: confidence-interval-width
#| echo: FALSE

ggplot(all_data_mod, aes(x = coverage,
                         y = error_bar_width)) +
  geom_point(pch = 21, alpha = 0.6, size = 2) +
  theme_bw()

```

