---
title: "SeqOne HRD Service Review"
format: 
  docx:
    reference-doc: "C:/Users/joseph.shaw2/Documents/pansolid_cnv_validation/vignettes/north_west_glh_document_template.docx"
    link-citations: true
toc: true
toc-title: "Table of Contents"
bibliography: hrd_library.bib
csl: harvard-manchester-metropolitan-university.csl
fig-align: "left"
date: today
date-format: "DD/MM/YYYY"
fig-width: 6
---

```{r}
#| label: packages
#| include: FALSE

library(tidyverse)
library(readxl)
library(janitor)
library(here)

```

```{r}
#| label: get-data
#| include: FALSE

source(here("scripts/get_dlims_hrd_review_data.R"))

```

```{r}
#| label: filepath
#| include: FALSE

audit_filepath <- paste0(config::get("data_filepath"), "live_service/service/audit_files/")

```

Authors: Joe Shaw (CS20980) and Antonio Pereira

# Introduction

This is an audit of the first year of the homologous recombination deficiency (HRD) testing service using the SeqOne SomaHRD pipeline at the Manchester Genomics Laboratory Hub (GLH).

## Key points and references

- **December 2023:** the SeqOne SomaHRD v1.2.0 pipeline was validated ([DOC6192]{custom-style="Strong"}).

- **December 2023:** the SeqOne HRD clinical service began. DNA was extracted using the Cobas extraction method (Qiagen). Results were entered and reported by GLH scientists on the DNA Database.

- **April 2024:** the QIAsymphony DNA extraction method was validated for use with SeqOne ([DOC6255]{custom-style="Strong"}).

- **April 2024:** results were entered by GLH scientists on the iGene database.

- **April 2024:** SomaHRD was upgraded to v1.2.7 ([INC9110]{custom-style="Strong"}).

- **November 2024:** SomaHRD was upgraded to v1.2.8 ([INC9891]{custom-style="Strong"}).

## Data sources

Data as been taken from the following sources:

- The DNA database (also known as the DNA Laboratory Information Management System - DLIMS)

- The iGene database

- Comma separated value (.csv) files downloaded from the SeqOne website: [https://seqone.com/]()

{{< pagebreak >}}

# Service Overview

@tbl-service-total shows the total number of samples tested by the SeqOne HRD service in the first year.

```{r}
#| label: tbl-service-total
#| echo: FALSE

seqone_live_csv_data <- read_csv(file = paste0(config::get("data_filepath"), 
                                               "live_service/service/",
                                               "collated_data/",
                                               "collated_live_csv_data.csv"),
                                 col_types = "cccdddclldddddddcc")

csv_summary_tbl <- seqone_live_csv_data |> 
  group_by(status) |> 
  summarise(total = n()) |> 
  arrange(desc(total)) |> 
  mutate(percentage = round((total / sum(total)) * 100, 1)) |> 
  adorn_totals() |> 
  rename("SeqOne HRD status" = status)

knitr::kable(csv_summary_tbl)

```

# Genomic instability and *BRCA1/2* variants

## Results from DNA Database

```{r}
#| label: load-dlims-data
#| include: FALSE

dlims_sample_info <- read_csv(file = paste0(audit_filepath,
                                            "dlims_sample_info.csv"),
                              col_types = "cccccccc")

dlims_seqone_results <- read_csv(file = paste0(audit_filepath,
                                              "dlims_seqone_results.csv"),
                                 col_types = "ccccc")

dlims_pansolid_results <- read_csv(file = paste0(audit_filepath,
                                                 "dlims_pansolid_results.csv"),
                                   col_types = "ccccc") |> 
  mutate(pansolid_result = case_when(
    
    genotype == "Analysis failed" ~"Fail",
    
    grepl(pattern = ".*BRCA(1|2)\\sc..*", x = genotype,
          ignore.case = TRUE) ~"BRCA variant identified",
    
    grepl(pattern = "No\\spathogenic(\\sBRCA1\\s|\\sBRCA2\\s|\\s)variant\\sidentified.*",
          x = genotype,
          ignore.case = TRUE) ~"No BRCA variant identified",
    
    is.na(genotype) ~NA
    
  ),
  pansolid_result = factor(pansolid_result, levels = c("BRCA variant identified",
                                                       "No BRCA variant identified",
                                                       "Fail",
                                                       NA)))

tbrca_seqone_dlims_df <- dlims_seqone_results |> 
  left_join(seqone_live_csv_data,
            by = c("labno", "worksheet")) |> 
  left_join(dlims_pansolid_results, by = "labno")

tbrca_seqone_dlims_df_filtered <- tbrca_seqone_dlims_df |> 
  filter(genotype.x %in% c("Negative", "Positive") &
           pansolid_result %in% c("No BRCA variant identified",
                             "BRCA variant identified"))
```

There are `r nrow(tbrca_seqone_dlims_df_filtered)` samples which have results on DLIMS from both SeqOne HRD testing and *BRCA1/2* sequencing on the PanSolid next generation sequencing panel. Samples with an inconclusive or fail result for either test were excluded. Results were joined by the "labno" field from DLIMS. A sample is classified as having homologous recombination deficiency when the SeqOne score is 0.5 or greater. Three samples were classified as being homologous recombination proficient by SeqOne but were also found to have pathogenic *BRCA1/2* variants (@fig-dlims-plot).

```{r}
#| label: fig-dlims-plot
#| fig-cap: "SeqOne results from the DLIMS database, coloured by the findings on DNA sequencing, also taken from DLIMS."
#| echo: FALSE

ggplot(tbrca_seqone_dlims_df_filtered, aes(x = score, y = )) +
  geom_histogram(aes(fill = pansolid_result),
                 binwidth = 0.01) +
  scale_fill_manual(values = c("#CC6677", "#888888")) +
  theme_bw() +
  theme(legend.position = "bottom",
        legend.title.position = "bottom") +
  labs(title = paste0("Results for ", nrow(tbrca_seqone_dlims_df_filtered), 
                      " samples from DNA database"),
       subtitle = "Joined by DNA number",
       x = "SeqOne HRD score (from csv files)",
       y = "Number of samples",
       fill = "tBRCA result from DNA database")

```

Here are the details of the samples with *BRCA1/2* variants.

```{r}
#| label: tbl-dlims-brca-variants
#| echo: FALSE

dlims_brca_samples <- tbrca_seqone_dlims_df_filtered |> 
  filter(pansolid_result == "BRCA variant identified") |> 
  select(labno, score, LGA, LPC, genotype.y) |> 
  rename(seqone_score = score,
         brca_variant = genotype.y) |> 
  mutate(seqone_score = round(seqone_score, 2)) |> 
  arrange(seqone_score)

knitr::kable(dlims_brca_samples)

```

## Results from iGene

```{r}
#| label: load-igene-data
#| include: FALSE


igene_export <- read_excel(path = paste0(audit_filepath,
                                         "20241125 Draft Test Results HRD BRCA.xlsx")) |> 
  clean_names()

widen_by_test <- function(df = igene_export, test_string,
                          prefix_string) {
  
  output <- igene_export |> 
    filter(test == test_string) |> 
    select(-box) |> 
    pivot_wider(id_cols = c(referral:test_id),
                names_from = field,
                values_from = value,
                names_prefix = prefix_string) |> 
    clean_names()
  
  if(nrow(output) == 0){
    stop("Output dataframe is empty")
  }
  
  return(output)
  
}

tbrca_igene_df <- widen_by_test(test_string = "PANEL: M2_tBRCA_PS", prefix_string = "t_BRCA")

seqone_igene_df <- widen_by_test(test_string = "PANEL: M2.5 - SeqOne HRD Status", 
                                 prefix_string = "seqone") |> 
  mutate(seqone_seq_one_hrd_score = as.numeric(seqone_seq_one_hrd_score))

icp_igene_df <- widen_by_test(test_string = "PANEL: R207.1 - Inherited ovarian cancer (without breast cancer) v4.0 (ICP)",
                              prefix_string = "icp")

pass_headlines <- c("No reportable variant(s) detected",
                    "Reportable variant(s) detected")

tbrca_seqone_df <- tbrca_igene_df |> 
  filter(t_brca_headline_result %in% pass_headlines) |> 
  inner_join(seqone_igene_df |> 
               filter(seqone_headline_result %in% pass_headlines),
             by = c("patient_id", "referral"))

icp_seqone_df <- icp_igene_df |> 
  filter(icp_headline_result %in% pass_headlines) |> 
  inner_join(seqone_igene_df |> 
               filter(seqone_headline_result %in% pass_headlines),
             by = c("patient_id"))

```

The same analysis was performed on data from the iGene database. There were `r nrow(tbrca_seqone_df)` samples with reportable results from SeqOne testing and *BRCA1/2* sequencing. Samples with an inconclusive or fail result for either test were excluded. Results were joined using the "patient_id" and "referral" (R number) fields from iGene.

```{r}
#| label: fig-tbrca-seqone
#| fig-cap: "This figure shows the results for samples tested with both SeqOne SomaHRD and tBRCA NGS. Samples where either test failed are excluded."
#| echo: FALSE

tbrca_seqone_plot <- ggplot(tbrca_seqone_df, aes(x = seqone_seq_one_hrd_score, y = )) +
  geom_histogram(aes(fill = t_brca_headline_result),
                 binwidth = 0.01) +
  scale_fill_manual(values = c("#888888", "#CC6677")) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(title = paste0("Results for ", nrow(tbrca_seqone_df), " samples from iGene"),
       x = "SeqOne HRD score (from iGene)",
       y = "Number of samples",
       fill = "tBRCA result")

tbrca_seqone_plot

```

```{r}
#| label: tbl-igene-tbrca-somatic
#| echo: FALSE

igene_brca_somatic_tbl <- tbrca_seqone_df |> 
  filter(!is.na(t_brcahgvs_description)) |> 
  select(referral, seqone_seq_one_hrd_score, t_brcahgvs_description,
         t_brca_classification) |> 
  arrange(seqone_seq_one_hrd_score)

knitr::kable(igene_brca_somatic_tbl)

```

Samples were also checked to see if the patient had a germ-line *BRCA1/2* variant identified on the Inherited Cancer Panel (ICP) test. Results were joined by the "patient_id" field from iGene.

```{r}
#| label: fig-icp-seqone
#| echo: FALSE

icp_seqone_plot <- ggplot(icp_seqone_df, aes(x = seqone_seq_one_hrd_score, y = )) +
  geom_histogram(aes(fill = icp_headline_result),
                 binwidth = 0.01) +
  scale_fill_manual(values = c("#888888", "#CC6677")) +
  theme_bw() +
  theme(legend.position = "bottom") +
  labs(title = paste0("Results for ", nrow(icp_seqone_df), " samples from iGene"),
       x = "SeqOne HRD score (from iGene)",
       y = "Number of samples",
       fill = "ICP result")

icp_seqone_plot

```

```{r}
#| label: tbl-igene-tbrca-germline
#| echo: FALSE

igene_brca_germline_tbl <- icp_seqone_df |> 
  filter(!is.na(icp_hgvs_description)) |> 
  select(referral.x, referral.y, seqone_seq_one_hrd_score, icp_hgvs_description,
         icp_classification) |> 
  rename(seqone_referral = referral.y,
         icp_referral = referral.x) |> 
  arrange(seqone_seq_one_hrd_score)

knitr::kable(igene_brca_germline_tbl)

```

# Neoplastic Cell Content

The neoplastic cell content (NCC) was extracted from the free-type "Comments" field of DNA Database.

```{r}
#| label: tbl-ncc
#| echo: FALSE

ncc_tbl <- dlims_sample_info |> 
  filter(labno %in% seqone_live_csv_data$labno) |> 
  mutate(ncc_char = case_when(
    is.na(ncc_char) ~"No NCC",
    TRUE ~ncc_char
  ),
  ncc_char = factor(ncc_char, levels = c("No NCC",
                                         "<10%",
                                         "10-20%",
                                         "20-30%",
                                         ">20%",
                                         ">30%"))) |> 
  count(ncc_char) |> 
  rename("Samples" = n,
         "NCC" = ncc_char) |> 
  janitor::adorn_totals()

knitr::kable(ncc_tbl)

```


